(function(){
  if (!window.matchMedia || !window.matchMedia('(max-width: 479px)').matches) return;
  // –£—Ç–∏–ª–∏—Ç—ã
  var PROGRESS_ADVANCE_THRESHOLD = 0.98;
  function qs(root, sel){ return (root||document).querySelector ? (root||document).querySelector(sel) : null; }
  function qsa(root, sel){ return (root||document).querySelectorAll ? (root||document).querySelectorAll(sel) : []; }
  function each(list, cb){ if(!list) return; (list.forEach ? list.forEach(cb) : Array.prototype.forEach.call(list, cb)); }

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∂–µ—Å—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
  var userGestureState = {
    lastGestureTime: null,
    gestureWindowMs: 5000, // –û–∫–Ω–æ –∂–µ—Å—Ç–∞ –æ–±—ã—á–Ω–æ 5 —Å–µ–∫—É–Ω–¥, –Ω–æ –º–æ–∂–µ—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è
    gestureTypes: ['click', 'touchstart', 'touchend', 'keydown', 'pointerdown', 'pointerup'],
    videosUnlocked: false, // –§–ª–∞–≥ —Ç–æ–≥–æ, —á—Ç–æ –≤–∏–¥–µ–æ –±—ã–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∂–µ—Å—Ç–µ
    unlockInProgress: false // –§–ª–∞–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  };

  // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—Å–µ—Ö –≤–∏–¥–µ–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∂–µ—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  function unlockAllVideosOnFirstGesture(){
    if (userGestureState.videosUnlocked || userGestureState.unlockInProgress) return;
    
    userGestureState.unlockInProgress = true;
    
    try {
      var allVideos = qsa(document, 'video');
      if (!allVideos || !allVideos.length) {
        userGestureState.unlockInProgress = false;
        return;
      }
      
      console.log('[snapSlider] üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—Å–µ—Ö –≤–∏–¥–µ–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∂–µ—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í—Å–µ–≥–æ –≤–∏–¥–µ–æ:', allVideos.length);
      
      var unlockedCount = 0;
      var failedCount = 0;
      
      each(allVideos, function(video, idx){
                  try {
                    if (!video || typeof video.play !== 'function') return;
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          var wasPaused = video.paused;
          var wasMuted = video.muted;
          var currentTime = video.currentTime || 0;
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–ª–∂–Ω–æ –ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º (–≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–ª–∞–π–¥–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–µ–π—Å–∞)
          var slideEl = video.closest ? video.closest('.story-track-wrapper__slide') : null;
          var isActiveSlide = !!(slideEl && slideEl.classList && slideEl.classList.contains('active'));
          var caseEl = slideEl ? (slideEl.closest ? slideEl.closest('.cases-grid__item, .case') : null) : null;
          if (!caseEl) {
            // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º talking-head –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–Ω–µ —Å–ª–∞–π–¥–æ–≤
            caseEl = video.closest ? video.closest('.cases-grid__item, .case') : null;
          }
          var isActiveCase = !!(caseEl && caseEl.classList && caseEl.classList.contains('active'));
          
          // Talking-head –≤–∏–¥–µ–æ —Ç–æ–∂–µ –¥–æ–ª–∂–Ω—ã –∏–≥—Ä–∞—Ç—å –µ—Å–ª–∏ –∫–µ–π—Å –∞–∫—Ç–∏–≤–µ–Ω
          var isTalkingHead = !!(video.closest && video.closest('.cases-grid__item__container__wrap__talking-head__video'));
          var shouldBePlaying = (isActiveSlide && isActiveCase) || (isTalkingHead && isActiveCase);
          
          // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –≤–∏–¥–µ–æ muted –¥–ª—è –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–≤—Ä–µ–º–µ–Ω–Ω–æ)
          var originalMuted = video.muted;
          if (!video.muted) {
            video.muted = true;
          }
          
          // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–∏–¥–µ–æ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∂–µ—Å—Ç–∞
          var playPromise = video.play();
          
          if (playPromise && typeof playPromise.then === 'function') {
            playPromise.then(function(){
              // –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
              try {
                unlockedCount++;
                video.__unlockedByGesture = true;
                
                if (shouldBePlaying) {
                  // –ï—Å–ª–∏ –≤–∏–¥–µ–æ –¥–æ–ª–∂–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è - –æ—Å—Ç–∞–≤–ª—è–µ–º –µ–≥–æ –∏–≥—Ä–∞—Ç—å
                  // –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º currentTime, —á—Ç–æ–±—ã –≤–∏–¥–µ–æ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–æ —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞ –≥–¥–µ –±—ã–ª–æ
                  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º muted –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                  if (!originalMuted) {
                    video.muted = originalMuted;
                  }
                  // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞ –ø–∞—É–∑–µ
                  if (video.paused) {
                    video.play().catch(function(){});
                  }
                  console.log('[snapSlider] ‚úÖ –í–∏–¥–µ–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∏ –æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∏–≥—Ä–∞—Ç—å [' + unlockedCount + '/' + allVideos.length + ']:', {
                    src: video.src || video.currentSrc || 'no src',
                    index: idx + 1,
                    paused: video.paused
                  });
                } else {
                  // –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è - —Å—Ç–∞–≤–∏–º –Ω–∞ –ø–∞—É–∑—É –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                  video.pause();
                  video.currentTime = currentTime; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ –∏—Å—Ö–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è
                  if (!originalMuted) {
                    video.muted = originalMuted; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º muted –µ—Å–ª–∏ –±—ã–ª –Ω–µ muted
                  }
                  console.log('[snapSlider] ‚úÖ –í–∏–¥–µ–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ [' + unlockedCount + '/' + allVideos.length + ']:', {
                    src: video.src || video.currentSrc || 'no src',
                    index: idx + 1
                  });
                }
              } catch(restoreErr){
                console.warn('[snapSlider] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∏–¥–µ–æ:', restoreErr);
              }
            }).catch(function(err){
              failedCount++;
              console.warn('[snapSlider] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ [' + failedCount + ']:', {
                src: video.src || video.currentSrc || 'no src',
                error: err ? (err.message || err.name) : 'Unknown',
                index: idx + 1
              });
            });
          } else {
            // –ï—Å–ª–∏ play() –Ω–µ –≤–µ—Ä–Ω—É–ª Promise (—Å—Ç–∞—Ä—ã–π –±—Ä–∞—É–∑–µ—Ä)
            try {
              unlockedCount++;
              video.__unlockedByGesture = true;
              
              if (!shouldBePlaying && !video.paused) {
                video.pause();
                video.currentTime = currentTime;
              }
              // –ï—Å–ª–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º - –æ—Å—Ç–∞–≤–ª—è–µ–º –∏–≥—Ä–∞—Ç—å
            } catch(_){}
          }
        } catch(videoErr){
          failedCount++;
          console.warn('[snapSlider] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ:', videoErr);
        }
      });
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã –¥–∞—Ç—å –ø—Ä–æ–º–∏—Å–∞–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è
      setTimeout(function(){
        userGestureState.videosUnlocked = true;
        userGestureState.unlockInProgress = false;
        console.log('[snapSlider] ‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å–ø–µ—à–Ω–æ:', unlockedCount, '–û—à–∏–±–æ–∫:', failedCount);
      }, 500);
      
    } catch(err){
      console.error('[snapSlider] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –≤–∏–¥–µ–æ:', err);
      userGestureState.unlockInProgress = false;
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∂–µ—Å—Ç–æ–≤
  function initUserGestureTracking(){
    try {
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è touchstart - –¥–æ–ª–∂–µ–Ω —Å—Ä–∞–±–æ—Ç–∞—Ç—å –ü–ï–†–í–´–ú –¥–æ –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
      function handleFirstGesture(ev){
        var now = Date.now();
        var isFirstGesture = userGestureState.lastGestureTime === null;
        
        userGestureState.lastGestureTime = now;
        
        // –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∂–µ—Å—Ç–µ - —Å—Ä–∞–∑—É —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ –≤–∏–¥–µ–æ
        if (isFirstGesture) {
          console.log('[snapSlider] üëÜ –ü–µ—Ä–≤—ã–π –∂–µ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤–∏–¥–µ–æ:', {
            type: ev.type,
            target: ev.target ? (ev.target.className || ev.target.tagName || ev.target.nodeName) : 'unknown',
            time: new Date(now).toISOString()
          });
          
          // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å—Ä–∞–∑—É, –±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏
          unlockAllVideosOnFirstGesture();
        } else {
          console.log('[snapSlider] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∂–µ—Å—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω:', {
            type: ev.type,
            target: ev.target ? (ev.target.className || ev.target.tagName || ev.target.nodeName) : 'unknown',
            time: new Date(now).toISOString()
          });
        }
      }
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∂–µ—Å—Ç–æ–≤, –Ω–æ touchstart/pointerdown - —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º (capture phase)
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º capture: true —á—Ç–æ–±—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å –î–û —Å–∫—Ä–æ–ª–ª–∞/—Å–≤–∞–π–ø–∞
      // –í–∞–∂–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º passive: true —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª
      userGestureState.gestureTypes.forEach(function(type){
        // Capture: true –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, passive: true –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–∫—Ä–æ–ª–ª
        document.addEventListener(type, handleFirstGesture, { capture: true, passive: true });
      });
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º touchstart –Ω–∞ window –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
      try {
        if (typeof window !== 'undefined' && window.addEventListener) {
          window.addEventListener('touchstart', handleFirstGesture, { capture: true, passive: true });
        }
      } catch(_){}
      
      // –ö–†–ò–¢–ò–ß–ù–û: –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞ .main-section - –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–æ–ª–ª–∏—Ä—É–µ–º—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      // –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç –∂–µ—Å—Ç–æ–≤ –î–û –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∫—Ä–æ–ª–ª–∞
      var mainSectionHandlersAttached = false;
      
      function attachToMainSection(){
        // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        if (mainSectionHandlersAttached) return true;
        
        var mainSection = qs(document, '.main-section');
        if (mainSection && mainSection.addEventListener) {
          mainSectionHandlersAttached = true;
          console.log('[snapSlider] –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∂–µ—Å—Ç–æ–≤ –Ω–∞ .main-section');
          
          // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∂–µ—Å—Ç—ã –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –î–û —Å–∫—Ä–æ–ª–ª–∞
          var priorityTypes = ['touchstart', 'pointerdown', 'mousedown'];
          priorityTypes.forEach(function(type){
            try {
              mainSection.addEventListener(type, handleFirstGesture, { capture: true, passive: true });
            } catch(_){}
          });
          
          // –û—Å—Ç–∞–ª—å–Ω—ã–µ –∂–µ—Å—Ç—ã —Ç–æ–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º
          userGestureState.gestureTypes.forEach(function(type){
            if (priorityTypes.indexOf(type) === -1) {
              try {
                mainSection.addEventListener(type, handleFirstGesture, { capture: true, passive: true });
              } catch(_){}
            }
          });
          return true; // –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ
        }
        return false; // –≠–ª–µ–º–µ–Ω—Ç –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω
      }
      
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å—Ä–∞–∑—É
      if (!attachToMainSection()) {
        // –ï—Å–ª–∏ .main-section –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –ø—Ä–æ–±—É–µ–º —Å –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
        setTimeout(function(){
          if (!attachToMainSection()) {
            setTimeout(function(){
              attachToMainSection();
            }, 150);
          }
        }, 50);
        
        // –¢–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º MutationObserver –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        try {
          if (typeof MutationObserver !== 'undefined') {
            var observer = new MutationObserver(function(mutations){
              if (!mainSectionHandlersAttached && attachToMainSection()) {
                observer.disconnect();
              }
            });
            
            observer.observe(document.body || document.documentElement, {
              childList: true,
              subtree: true
            });
            
            // –û—Ç–∫–ª—é—á–∞–µ–º observer —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
            setTimeout(function(){
              observer.disconnect();
            }, 5000);
          }
        } catch(_){}
      }
      
    } catch(_){}
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –∏—Å—Ç–µ–∫–ª–æ –ª–∏ –æ–∫–Ω–æ –∂–µ—Å—Ç–∞
  function getUserGestureInfo(){
    var now = Date.now();
    var lastGesture = userGestureState.lastGestureTime;
    var timeSinceGesture = lastGesture ? (now - lastGesture) : null;
    var isGestureValid = lastGesture && timeSinceGesture !== null && timeSinceGesture <= userGestureState.gestureWindowMs;
    
    return {
      hasGesture: lastGesture !== null,
      timeSinceGesture: timeSinceGesture,
      isGestureValid: isGestureValid,
      lastGestureTime: lastGesture ? new Date(lastGesture).toISOString() : null,
      currentTime: new Date(now).toISOString()
    };
  }

  // –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤–Ω—É—Ç—Ä–∏ .story-track-wrapper
  function buildProgress(containerEl, slidesCount){
    if (!containerEl || !slidesCount || slidesCount <= 0) return null;
    var existing = qs(containerEl, '.story-progress');
    if (existing) return { root: existing, segments: qsa(containerEl, '.story-progress__segment'), fills: qsa(containerEl, '.story-progress__fill') };

    var bar = document.createElement('div');
    bar.className = 'story-progress';
    for (var i=0; i<slidesCount; i++){
      var seg = document.createElement('div');
      seg.className = 'story-progress__segment';
      var fill = document.createElement('div');
      fill.className = 'story-progress__fill';
      seg.appendChild(fill);
      bar.appendChild(seg);
    }
    containerEl.appendChild(bar);
    return { root: bar, segments: qsa(containerEl, '.story-progress__segment'), fills: qsa(containerEl, '.story-progress__fill') };
  }

  if (typeof window !== 'undefined') {
    window.buildSnapSliderProgress = buildProgress;
  }

  // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤–∏–¥–µ–æ
  function logVideoPlayError(video, context, error){
    try {
      var videoInfo = {
        src: video.src || video.currentSrc || 'no src',
        muted: video.muted,
        autoplay: video.autoplay || false,
        paused: video.paused,
        readyState: video.readyState,
        networkState: video.networkState,
        context: context || 'unknown'
      };
      
      var errorInfo = {
        name: error ? (error.name || 'Unknown') : 'Play Promise Rejected',
        message: error ? (error.message || 'No message') : 'Video play() promise was rejected by browser',
        code: error ? (error.code || 'N/A') : 'N/A'
      };
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∂–µ—Å—Ç–∞—Ö
      var gestureInfo = getUserGestureInfo();
      
      var mainMessage = errorInfo.name === 'NotAllowedError' || errorInfo.code === 20 
        ? '–ë—Ä–∞—É–∑–µ—Ä –±–ª–æ–∫–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ (autoplay policy). –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.' 
        : errorInfo.message;
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –µ—Å–ª–∏ –æ–∫–Ω–æ –∂–µ—Å—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ
      if (gestureInfo.hasGesture && !gestureInfo.isGestureValid) {
        var secondsSince = gestureInfo.timeSinceGesture ? (gestureInfo.timeSinceGesture / 1000).toFixed(2) : 'N/A';
        mainMessage += ' [–û–ö–ù–û –ñ–ï–°–¢–ê –ò–°–¢–ï–ö–õ–û: –ø—Ä–æ—à–ª–æ ' + secondsSince + ' —Å–µ–∫ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∂–µ—Å—Ç–∞, –ª–∏–º–∏—Ç ~5 —Å–µ–∫]';
      } else if (!gestureInfo.hasGesture) {
        mainMessage += ' [–ñ–ï–°–¢–û–í –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ù–ï –ó–ê–§–ò–ö–°–ò–†–û–í–ê–ù–û]';
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
      var isUnlocked = !!(video.__unlockedByGesture);
      if (isUnlocked && (errorInfo.name === 'NotAllowedError' || errorInfo.code === 20)) {
        mainMessage += ' [‚ö†Ô∏è –í–∏–¥–µ–æ –±—ã–ª–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∂–µ—Å—Ç–µ, –Ω–æ –±—Ä–∞—É–∑–µ—Ä –≤—Å—ë —Ä–∞–≤–Ω–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç]';
      }
      
      console.error('[snapSlider] –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤–∏–¥–µ–æ:', {
        '–û—à–∏–±–∫–∞': errorInfo,
        '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ': videoInfo,
        '–°—Ç–∞—Ç—É—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏': {
          '–í–∏–¥–µ–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∂–µ—Å—Ç–µ': isUnlocked,
          '–ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞': userGestureState.videosUnlocked
        },
        '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∂–µ—Å—Ç—ã': {
          '–ï—Å—Ç—å –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∂–µ—Å—Ç—ã': gestureInfo.hasGesture,
          '–í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∂–µ—Å—Ç–∞': gestureInfo.timeSinceGesture ? (gestureInfo.timeSinceGesture / 1000).toFixed(2) + ' —Å–µ–∫' : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
          '–û–∫–Ω–æ –∂–µ—Å—Ç–∞ –≤–∞–ª–∏–¥–Ω–æ': gestureInfo.isGestureValid,
          '–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∂–µ—Å—Ç–∞': gestureInfo.lastGestureTime || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
          '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è': gestureInfo.currentTime
        },
        '–ü—Ä–∏—á–∏–Ω–∞': mainMessage,
        '–í—Ä–µ–º—è': new Date().toISOString()
      });
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
      if (video.muted === false) {
        console.warn('[snapSlider] –í–∏–¥–µ–æ –Ω–µ muted - —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å video.muted = true');
      }
      if (!video.paused) {
        console.info('[snapSlider] –í–∏–¥–µ–æ —É–∂–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è');
      }
      if (gestureInfo.hasGesture && !gestureInfo.isGestureValid) {
        console.warn('[snapSlider] ‚ö†Ô∏è –û–∫–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∂–µ—Å—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ! –ë—Ä–∞—É–∑–µ—Ä –±–ª–æ–∫–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è "–æ–∫–Ω–∞ –∂–µ—Å—Ç–∞" (–æ–±—ã—á–Ω–æ 5 —Å–µ–∫—É–Ω–¥)');
      }
    } catch(logErr){
      console.error('[snapSlider] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏:', logErr);
    }
  }

  // –ó–¥–µ—Å—å —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º: play/pause –∏ —Å–±—Ä–æ—Å –≤—Ä–µ–º–µ–Ω–∏.
  function playVideos(slideEl, context){
    if (!slideEl) return;
    var videos = qsa(slideEl, '.slide-inner__video-block video, video');
    if (!videos || !videos.length) return;
    var callContext = context || ('playVideos(' + (slideEl.className || 'unknown') + ')');
    each(videos, function(video, idx){
      try {
        if (video && typeof video.play === 'function') { 
              var p = video.play();
          if (p && typeof p.then === 'function') {
                p.then(function(){
              var gestureInfo = getUserGestureInfo();
              console.log('[snapSlider] –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ:', {
                src: video.src || video.currentSrc || 'no src',
                context: callContext + '[' + idx + ']',
                muted: video.muted,
                '–°—Ç–∞—Ç—É—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏': {
                  '–í–∏–¥–µ–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ': !!(video.__unlockedByGesture),
                  '–ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞': userGestureState.videosUnlocked
                },
                '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∂–µ—Å—Ç—ã': {
                  '–ï—Å—Ç—å –∂–µ—Å—Ç—ã': gestureInfo.hasGesture,
                  '–í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∂–µ—Å—Ç–∞': gestureInfo.timeSinceGesture ? (gestureInfo.timeSinceGesture / 1000).toFixed(2) + ' —Å–µ–∫' : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
                  '–û–∫–Ω–æ –∂–µ—Å—Ç–∞ –≤–∞–ª–∏–¥–Ω–æ': gestureInfo.isGestureValid
                }
              });
            }).catch(function(err){
              logVideoPlayError(video, callContext + '[' + idx + ']', err);
            });
          }
        }
      } catch(err){
        logVideoPlayError(video, callContext + '[' + idx + ']', err);
      }
    });
  }

  function pauseAndResetVideos(slideEl){
    if (!slideEl) return;
    var videos = qsa(slideEl, '.slide-inner__video-block video, video');
    if (!videos || !videos.length) return;
    each(videos, function(video){
      try { if (video && typeof video.pause === 'function') video.pause(); } catch(_){ }
      try { if (typeof video.currentTime === 'number') video.currentTime = 0; } catch(_){ }
    });
  }

  function pauseAndResetVideosInElement(rootEl){
    if (!rootEl) return;
    var videos = qsa(rootEl, 'video');
    if (!videos || !videos.length) return;
    each(videos, function(video){
      try { if (video && typeof video.pause === 'function') video.pause(); } catch(_){ }
      // talking-head: –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è, —Ç–æ–ª—å–∫–æ –ø–∞—É–∑–∞
      var isTalking = false;
      try { isTalking = !!(video.closest && video.closest('.cases-grid__item__container__wrap__talking-head__video')); } catch(__){}
      if (!isTalking){
        try { if (typeof video.currentTime === 'number') video.currentTime = 0; } catch(_){ }
      }
    });
  }

  // –ü–∞—É–∑–∞ –≤—Å–µ—Ö –≤–∏–¥–µ–æ –±–µ–∑ —Å–±—Ä–æ—Å–∞ –≤—Ä–µ–º–µ–Ω–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ .cases-grid –∏–∑ –∑–æ–Ω—ã)
  function pauseAllVideosInElement(rootEl){
    if (!rootEl) return;
    var videos = qsa(rootEl, 'video');
    if (!videos || !videos.length) return;
    each(videos, function(video){
      try { if (video && typeof video.pause === 'function') video.pause(); } catch(_){ }
    });
  }

  // –°–±—Ä–æ—Å/–∑–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –Ω–µ –≤ –∑–æ–Ω–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —ç—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞

  // –ü–æ–º–æ—â–Ω–∏–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  function updateSegmentDurationByIndexInWrapper(wrapperEl, index, durationSec){
    if (!wrapperEl || !isFinite(durationSec) || durationSec <= 0) return;
    var segs = qsa(wrapperEl, '.story-progress__segment');
    if (!segs || !segs.length || index < 0 || index >= segs.length) return;
    var seg = segs[index];
    try {
      seg.style.animationDuration = durationSec + 's';
      seg.style.setProperty('--progress-duration', durationSec + 's');
    } catch(_){ }
  }

  function syncProgressDurations(wrapperEl){
    if (!wrapperEl) return;
    var slides = qsa(wrapperEl, '.story-track-wrapper__slide');
    if (!slides || !slides.length) return;
    each(slides, function(slide, idx){
      var video = qs(slide, '.slide-inner__video-block video') || qs(slide, 'video');
      if (!video) return;
      var apply = function(){ updateSegmentDurationByIndexInWrapper(wrapperEl, idx, video.duration); };
      if (isFinite(video.duration) && video.duration > 0){
        apply();
      } else {
        try { video.addEventListener('loadedmetadata', apply, { once: true }); } catch(_){ }
      }
    });
  }

  // –ì–µ–π—Ç—ã –ø–æ –ø–æ–ª–æ–∂–µ–Ω–∏—é —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—å—é–ø–æ—Ä—Ç–∞ (—Å –∑–∞–∑–æ—Ä–æ–º 2px)
  function isEligibleBySelector(selector){
    var el = qs(document, selector);
    if (!el) return false;
    var r = el.getBoundingClientRect();
    var vh = (typeof window !== 'undefined' && window.innerHeight) ? window.innerHeight : ((document.documentElement && document.documentElement.clientHeight) ? document.documentElement.clientHeight : 0);
    var m = 2; // –∑–∞–∑–æ—Ä 2px
    return (r.top <= 0 + m) && (r.bottom >= vh - m);
  }

  function isCasesGridEligible(){
    return isEligibleBySelector('.cases-grid');
  }

  function isMainContainerEligible(){
    return isEligibleBySelector('.main-container');
  }

  function setCasesGridInProgress(_ignored){
    var grid = qs(document, '.cases-grid');
    var container = qs(document, '.main-container');
    var contEligible = isMainContainerEligible();
    var gridEligible = isCasesGridEligible();
    // –°—Ç–∞–≤–∏–º –∫–ª–∞—Å—Å—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É ‚Äî in-progress, –≥—Ä–∏–¥—É ‚Äî state-view
    try { if (container){ if (contEligible) container.classList.add('in-progress'); else container.classList.remove('in-progress'); } } catch(_){ }
    try { if (grid){ if (gridEligible) grid.classList.add('state-view'); else grid.classList.remove('state-view'); } } catch(_){ }
  }
  
  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å .active –¥–ª—è —Å–ª–∞–π–¥–∞ –≤–Ω—É—Ç—Ä–∏ wrapper –ø–æ –±–ª–∏–∑–æ—Å—Ç–∏ –∫ —Ü–µ–Ω—Ç—Ä—É wrapper
  function setActiveSlideInWrapperByCenter(wrapperEl){
    if (!wrapperEl) return null;
    var slides = qsa(wrapperEl, '.story-track-wrapper__slide');
    if (!slides || !slides.length) return null;
    var rootRect = wrapperEl.getBoundingClientRect();
    var centerX = rootRect.left + (rootRect.width || 0) / 2;
    var best = null; var bestDist = Infinity;
    for (var i=0; i<slides.length; i++){
      var r = slides[i].getBoundingClientRect();
      var ix = r.left + (r.width || 0) / 2;
      var d = Math.abs(ix - centerX);
      if (d < bestDist){ bestDist = d; best = slides[i]; }
    }
    if (best){
      (slides.forEach ? slides.forEach : Array.prototype.forEach).call(slides, function(s){
        if (s === best) { try { s.classList.add('active'); } catch(_){ } }
        else { try { s.classList.remove('active'); } catch(_){ } }
      });
    }
    return best;
  }

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á –±—Ä–µ–Ω–¥–∞ –∏–∑ id –∫–µ–π—Å–∞ (—É–±–∏—Ä–∞–µ–º —Å—É—Ñ—Ñ–∏–∫—Å -case)
  function extractBrandKeyFromCase(el){
    try {
      var id = el && (el.id || (el.getAttribute ? el.getAttribute('id') : null));
      if (!id) return null;
      return id.replace(/-case$/i, '');
    } catch(_){ return null; }
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º .current –≤ —Å–ø–∏—Å–∫–µ –º–∏–Ω–∏‚Äë–≤—å—é –ø–æ brand-data="<brand>-mini-view"
  function setStackMiniViewCurrent(brandKey){
    if (!brandKey) return;
    var list = qs(document, '.main-container__stack-wrap__wrapper__list');
    if (!list) return;
    try {
      var target = qs(list, '[brand-data="' + brandKey + '-mini-view"]');
      if (!target) return;
      var currents = qsa(list, '.current');
      each(currents, function(el){ try { el.classList.remove('current'); } catch(_){ } });
      try { target.classList.add('current'); } catch(_){ }
      try { updateStackOpacityByCurrent(); } catch(_){ }
    } catch(_){ }
  }

  function getStackList(){ return qs(document, '.main-container__stack-wrap__wrapper__list'); }
  function getStackItems(){ var l = getStackList(); return l ? qsa(l, '.main-container__stack-wrap__wrapper__list__item') : []; }
  function getStackContainer(){ return qs(document, '.main-container__stack-wrap'); }

  // Talking-head helpers
  function getTalkingHeadVideo(root){ return qs(root, '.cases-grid__item__container__wrap__talking-head__video video'); }
  function playTalkingHead(root){
    var v = getTalkingHeadVideo(root);
    if (v){ 
      try { 
            var p = v.play();
        if (p && typeof p.then === 'function') {
              p.then(function(){
            var gestureInfo = getUserGestureInfo();
            console.log('[snapSlider] Talking-head –≤–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ:', {
              src: v.src || v.currentSrc || 'no src',
              muted: v.muted,
              '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∂–µ—Å—Ç—ã': {
                '–ï—Å—Ç—å –∂–µ—Å—Ç—ã': gestureInfo.hasGesture,
                '–í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∂–µ—Å—Ç–∞': gestureInfo.timeSinceGesture ? (gestureInfo.timeSinceGesture / 1000).toFixed(2) + ' —Å–µ–∫' : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
                '–û–∫–Ω–æ –∂–µ—Å—Ç–∞ –≤–∞–ª–∏–¥–Ω–æ': gestureInfo.isGestureValid
              }
            });
          }).catch(function(err){
            logVideoPlayError(v, 'playTalkingHead', err);
          });
      }
    } catch(err){
        logVideoPlayError(v, 'playTalkingHead', err);
      } 
    } 
  }
  function pauseTalkingHead(root){ var v = getTalkingHeadVideo(root); if (v){ try { v.pause(); } catch(_){ } } }

  // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç talking-head –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –∫–µ–π—Å –∞–∫—Ç–∏–≤–µ–Ω
  function ensureTalkingHeadAutoPlay(caseEl){
    try {
      var v = getTalkingHeadVideo(caseEl);
      if (!v) return;
      var onMeta = function(){
        try {
          if (caseEl.classList && caseEl.classList.contains('active')){
            playTalkingHead(caseEl);
          }
        } catch(_){ }
      };
      try { v.addEventListener('loadedmetadata', onMeta, { once: true }); } catch(_){ }
    } catch(_){ }
  }

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á –±—Ä–µ–Ω–¥–∞ –∏–∑ –∞–π—Ç–µ–º–∞ —Å—Ç–µ–∫–∞: brand-data="xx-mini-view" –Ω–∞ —Å–∞–º–æ–º –∞–π—Ç–µ–º–µ –∏–ª–∏ –µ–≥–æ –ø–æ—Ç–æ–º–∫–µ
  function extractBrandKeyFromStackItem(item){
    if (!item) return null;
    try {
      var attr = item.getAttribute ? item.getAttribute('brand-data') : null;
      if (!attr){
        var inner = item.querySelector ? item.querySelector('[brand-data$="-mini-view"]') : null;
        if (inner) { attr = inner.getAttribute('brand-data'); }
      }
      if (!attr) return null;
      var m = attr.match(/^(.+)-mini-view$/);
      return m ? m[1] : null;
    } catch(_){ return null; }
  }

  function scrollToCaseByBrand(brandKey, opts){
    if (!brandKey) return;
    var caseEl = document.getElementById(brandKey + '-case') || qs(document, '#' + brandKey + '-case');
    if (!caseEl) return;
    try {
      var scroller = qs(document, '.main-section');
      if (!scroller){
        var behavior = (opts && opts.instant) ? 'auto' : 'smooth';
        caseEl.scrollIntoView({ behavior: behavior, block: 'start', inline: 'nearest' });
        return;
      }

      // –¶–µ–ª–µ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ—Ä–∞
      var beforeTop = scroller.scrollTop || 0;
      var scrRect = scroller.getBoundingClientRect();
      var tgtRect = caseEl.getBoundingClientRect();
      var targetTopWithin = (tgtRect.top - scrRect.top) + beforeTop;
      var desiredTop = Math.max(0, targetTopWithin);

      // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º scroll-snap –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞
      var prevSnap = scroller.style.scrollSnapType;
      scroller.style.scrollSnapType = 'none';

      var instant = !!(opts && opts.instant);
      if (instant){
        scroller.scrollTop = desiredTop;
      } else if (typeof scroller.scrollTo === 'function') {
        scroller.scrollTo({ top: desiredTop, behavior: 'smooth' });
      } else {
        scroller.scrollTop = desiredTop;
      }

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º snap —á—É—Ç—å –ø–æ–∑–∂–µ, –∑–∞—Ç–µ–º –¥–æ—Å–Ω–∞–ø–ª–∏–≤–∞–µ–º –∫ –Ω–∞—á–∞–ª—É —ç–ª–µ–º–µ–Ω—Ç–∞
      var restoreMs = instant ? 60 : 400;
      if (scroller.__snapRestoreTimer) { clearTimeout(scroller.__snapRestoreTimer); }
      scroller.__snapRestoreTimer = setTimeout(function(){
        try { scroller.style.scrollSnapType = prevSnap || 'y mandatory'; } catch(__){}
        try { caseEl.scrollIntoView({ behavior: 'auto', block: 'start', inline: 'nearest' }); } catch(__){}
        try { scroller.__snapRestoreTimer = null; } catch(__){}
      }, restoreMs);
    } catch(_){ }
  }

  function initializeStackZIndex(){
    var items = getStackItems();
    if (!items || !items.length) return;
    var n = items.length;
    each(items, function(el, idx){ try { el.style.zIndex = String((n - idx) + 1); } catch(_){ } });
  }

  function clearStackCardStyles(){
    var items = getStackItems();
    each(items, function(el){
      try {
        var cls = (el.className || '').split(/\s+/);
        for (var i=cls.length-1; i>=0; i--){ if (/-card-style$/.test(cls[i])) { el.classList.remove(cls[i]); } }
      } catch(_){ }
    });
  }

  function updateStackOpacityByCurrent(){
    var items = getStackItems(); if (!items || !items.length) return;
    var container = getStackContainer();
    var isOpen = !!(container && container.classList && container.classList.contains('open-stack'));
    var currentIndex = -1;
    for (var i=0; i<items.length; i++){ if (items[i].classList && items[i].classList.contains('current')) { currentIndex = i; break; } }
    if (isOpen){
      each(items, function(el){ try { el.style.opacity = '1'; } catch(_){ } });
    } else if (currentIndex >= 0){
      // –ü—Ä–∏ –∑–∞–∫—Ä—ã—Ç–æ–º —Å—Ç–µ–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ current; —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ –∏ –ø–æ—Å–ª–µ ‚Äî —Å–∫—Ä—ã–≤–∞–µ–º
      each(items, function(el, idx){ try { el.style.opacity = (idx === currentIndex) ? '1' : '0'; } catch(_){ } });
    }
  }

  // –ò–Ω–¥–µ–∫—Å –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞ –≤ wrapper
  function getActiveSlideIndex(wrapperEl){
    var slides = qsa(wrapperEl, '.story-track-wrapper__slide');
    if (!slides || !slides.length) return -1;
    for (var i=0; i<slides.length; i++){
      if (slides[i].classList && slides[i].classList.contains('active')) return i;
    }
    return -1;
  }

  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Ü–µ–ª–µ–≤–æ–º—É —Å–ª–∞–π–¥—É (–ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π —Å–≤–∞–π–ø)
  function scrollToSlide(wrapperEl, slides, index, options){
    if (!wrapperEl || !slides || !slides.length) return;
    var target = slides[index];
    if (!target) return;
    try {
      var st = wrapperEl.__snapState || (wrapperEl.__snapState = {});
      var force = options && options.forceIgnoreUser === true;
      if (st.isUserInteracting && !force) return;
      if (st._autoLockTimer) { clearTimeout(st._autoLockTimer); }
      st.autoScrollLock = true;
      st._autoLockTimer = setTimeout(function(){ st.autoScrollLock = false; }, 600);
    } catch(_){ }
    try {
      target.scrollIntoView({ behavior: 'smooth', inline: 'start', block: 'nearest' });
    } catch(_){
      try { wrapperEl.scrollTo({ left: target.offsetLeft, behavior: 'smooth' }); }
      catch(__){ try { wrapperEl.scrollLeft = target.offsetLeft; } catch(___){ } }
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ wrapper
  function updateWrapperPlayback(wrapperEl){
    if (!wrapperEl) return;
    var slides = qsa(wrapperEl, '.story-track-wrapper__slide');
    var fills = qsa(wrapperEl, '.story-progress__fill');
    if (!slides || !slides.length) return;

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–µ–π—Å –∞–∫—Ç–∏–≤–µ–Ω
    var caseEl = wrapperEl.closest ? wrapperEl.closest('.cases-grid__item, .case') : null;
    var caseIsActive = !!(caseEl && caseEl.classList && caseEl.classList.contains('active'));

    var activeIdx = -1;
    for (var i=0; i<slides.length; i++){
      if (slides[i].classList && slides[i].classList.contains('active')){ activeIdx = i; break; }
    }

    each(slides, function(slide, idx){
      var video = qs(slide, '.slide-inner__video-block video') || qs(slide, 'video');
      var fill = (fills && fills[idx]) ? fills[idx] : null;

      function detachHandlers(v){
        if(!v) return;
        try { if(v.__progressHandler){ v.removeEventListener('timeupdate', v.__progressHandler); v.__progressHandler = null; } } catch(_){ }
        try { if(v.__metaHandler){ v.removeEventListener('loadedmetadata', v.__metaHandler); v.__metaHandler = null; } } catch(_){ }
        try { if(v.__endedHandler){ v.removeEventListener('ended', v.__endedHandler); v.__endedHandler = null; } } catch(_){ }
        // –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–¥–µ—Å—å
        if (v.__rafProgressId){ try { cancelAnimationFrame(v.__rafProgressId); } catch(_){ } v.__rafProgressId = null; }
      }

      if (idx !== activeIdx || !caseIsActive){
        detachHandlers(video);
        if (fill) { try { fill.style.transform = 'scaleX(0)'; } catch(_){ } }
        // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–∏–¥–µ–æ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ª–∞–π–¥–∞—Ö
        try { pauseAndResetVideos(slide); } catch(_){ }
        try { delete slide.__progressAdvancedOnce; } catch(_){ }
      } else {
        if (video){
          detachHandlers(video);
          // rAF –∞–ø–¥–µ–π—Ç–µ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞, —á—Ç–æ–±—ã –±–∞—Ä –∑–∞–ø–æ–ª–Ω—è–ª—Å—è —Å—Ç–∞–±–∏–ª—å–Ω–æ
          var startRafIfNeeded = function(){
            if (video.__rafProgressId) return;
            var rafFn = function(){
              var dur = (isFinite(video.duration) && video.duration > 0) ? video.duration : 0;
              var ct = Math.max(0, video.currentTime || 0);
              var p = dur > 0 ? Math.min(1, ct / dur) : 0;
              if (fill) { try { fill.style.transform = 'scaleX(' + p + ')'; } catch(_){ } }
              // –∞–≤—Ç–æ–ø–µ—Ä–µ—Ö–æ–¥ –ø–æ 98%
              try {
                if (p >= PROGRESS_ADVANCE_THRESHOLD && !slide.__progressAdvancedOnce){
                  slide.__progressAdvancedOnce = true;
                  var st = wrapperEl.__snapState || {};
                  if (!st.isUserInteracting && !st.autoScrollLock){
                    var nextIndex = (idx + 1) < slides.length ? (idx + 1) : 0;
                    scrollToSlide(wrapperEl, slides, nextIndex);
                  }
                }
              } catch(_){ }
              if (!video.paused && !video.ended){ video.__rafProgressId = requestAnimationFrame(rafFn); } else { video.__rafProgressId = null; }
            };
            video.__rafProgressId = requestAnimationFrame(rafFn);
          };

          video.__progressHandler = function(){
            var dur = (isFinite(video.duration) && video.duration > 0) ? video.duration : 0;
            var ct = Math.max(0, video.currentTime || 0);
            var p = dur > 0 ? Math.min(1, ct / dur) : 0;
            if (fill) { try { fill.style.transform = 'scaleX(' + p + ')'; } catch(_){ } }
            // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–∞–π–¥—É –Ω–∞ 98%, –µ—Å–ª–∏ –≤–∏–¥–µ–æ –∑–∞—Ü–∏–∫–ª–µ–Ω–æ (ended –º–æ–∂–µ—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—Ç—å)
            try {
              if (p >= PROGRESS_ADVANCE_THRESHOLD && !slide.__progressAdvancedOnce){
                slide.__progressAdvancedOnce = true;
                var st = wrapperEl.__snapState || {};
                if (!st.isUserInteracting && !st.autoScrollLock){
                  var nextIndex = (idx + 1) < slides.length ? (idx + 1) : 0;
                  scrollToSlide(wrapperEl, slides, nextIndex);
                }
              }
            } catch(_){ }
            // –°—Ç–∞—Ä—Ç—É–µ–º rAF-–ø–æ—Ç–æ–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
            startRafIfNeeded();
          };
          video.__metaHandler = function(){
            if (video.__progressHandler) video.__progressHandler();
            // –ü–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —É –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º –∫–µ–π—Å–µ ‚Äî –∑–∞–ø—É—Å—Ç–∏–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
            try {
              if (idx === activeIdx && caseIsActive) { playVideos(slide, 'updateWrapperPlayback.metaHandler[' + idx + ']'); }
            } catch(_){ }
          };
          video.__endedHandler = function(){
            if (fill) { try { fill.style.transform = 'scaleX(1)'; } catch(_){ } }
            try {
              var st = wrapperEl.__snapState || {};
              if (!st.isUserInteracting && !st.autoScrollLock){
                var nextIndex = (idx + 1) < slides.length ? (idx + 1) : 0;
                scrollToSlide(wrapperEl, slides, nextIndex);
              }
            } catch(_){ }
          };
          try { video.addEventListener('timeupdate', video.__progressHandler); } catch(_){ }
          try { video.addEventListener('loadedmetadata', video.__metaHandler, { once: true }); } catch(_){ }
          try { video.addEventListener('ended', video.__endedHandler, { once: true }); } catch(_){ }
        }
        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–æ–º –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤–Ω–µ—à–Ω–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º; –∑–¥–µ—Å—å –Ω–µ —Ç—Ä–æ–≥–∞–µ–º playback
      }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Å–µ–≥–º–µ–Ω—Ç–æ–≤ –¥–æ/–ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ
    if (fills && activeIdx >= 0){
      for (var f=0; f<fills.length; f++){
        if (f < activeIdx){ try { fills[f].style.transform = 'scaleX(1)'; } catch(_){ }
                          } else if (f > activeIdx){ try { fills[f].style.transform = 'scaleX(0)'; } catch(_){ }
                                                    }
      }
    }
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ .active —É .cases-grid__item —Å —É—á—ë—Ç–æ–º scroll-snap
  function setupCasesActiveOnScrollSnap(){
    var scroller = (document && document.querySelector) ? document.querySelector('.main-section') : null;
    if (!scroller) return;
    var items = scroller.querySelectorAll ? scroller.querySelectorAll('.cases-grid__item, .case') : null;
    if (!items || !items.length) return;

    var rafId = null;
    var settleTimer = null;
    var lastEligibility = null;
    var lastActiveCase = null;

    function updateActive(){
      rafId = null;
      // –ì–µ–π—Ç: –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–µ–π—Å—ã —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ .main-container –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –≤—å—é–ø–æ—Ä—Ç —Å–≤–µ—Ä—Ö—É –∏ —Å–Ω–∏–∑—É
      var eligible = isMainContainerEligible();
      setCasesGridInProgress(eligible);
      if (!eligible){
        lastEligibility = false;
        // –í–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∑–æ–Ω—ã ‚Äî —Å—Ç–∞–≤–∏–º –≤—Å–µ –≤–∏–¥–µ–æ –Ω–∞ –ø–∞—É–∑—É –∏ –Ω–µ –º–µ–Ω—è–µ–º active
        pauseAllVideosInElement(document);
        return;
      }
      // –í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–∫—Ç–∏–≤–Ω—É—é –∑–æ–Ω—É –ø–æ—Å–ª–µ –ø–∞—É–∑—ã ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Å–ª–∞–π–¥
      if (lastEligibility === false){
        var activeCase = qs(document, '.cases-grid__item.active, .case.active');
        if (activeCase){
          var wrappersInCase0 = qsa(activeCase, '.story-track-wrapper');
          each(wrappersInCase0, function(w){ try { updateWrapperPlayback(w); } catch(_){ } });
          var activeSlides = qsa(activeCase, '.story-track-wrapper__slide.active');
          if (activeSlides && activeSlides.length){ each(activeSlides, function(s){ try { playVideos(s, 'setupCasesActiveOnScrollSnap.returnToZone'); } catch(_){ } }); }
          // talking-head –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∑–æ–Ω—É
          try { ensureTalkingHeadAutoPlay(activeCase); } catch(_){ }
        }
      }
      lastEligibility = true;
      var rootRect = scroller.getBoundingClientRect();
      var isHorizontal = (scroller.scrollWidth - scroller.clientWidth) > (scroller.scrollHeight - scroller.clientHeight);
      var centerX = rootRect.left + (rootRect.width || 0) / 2;
      var centerY = rootRect.top + (rootRect.height || 0) / 2;
      var best = null; var bestDist = Infinity;
      for (var i=0; i<items.length; i++){
        var r = items[i].getBoundingClientRect();
        var ix = r.left + (r.width || 0) / 2;
        var iy = r.top + (r.height || 0) / 2;
        var d = isHorizontal ? Math.abs(ix - centerX) : Math.abs(iy - centerY);
        if (d < bestDist) { bestDist = d; best = items[i]; }
      }
      if (best){
        // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –∫–µ–π—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—ë—Ä–≥–∞–Ω–∏–π
        if (best === lastActiveCase) return;

        (items.forEach ? items.forEach : Array.prototype.forEach).call(items, function(el){
          if (el === best) { el.classList.add('active'); playTalkingHead(el); try { ensureTalkingHeadAutoPlay(el); } catch(_){ } }
          else { el.classList.remove('active'); pauseTalkingHead(el); }
        });

        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –º–∏–Ω–∏‚Äë–≤—å—é –±—Ä–µ–Ω–¥–∞ –∏ opacity (card-style –Ω–∞–∑–Ω–∞—á–∞–µ–º –¢–û–õ–¨–ö–û –ø—Ä–∏ open-stack)
        try {
          var brandKey = extractBrandKeyFromCase(best);
          setStackMiniViewCurrent(brandKey);
          updateStackOpacityByCurrent();
        } catch(_){ }

        // –°–Ω–∏–º–∞–µ–º active —Å–æ –≤—Å–µ—Ö —Å–ª–∞–π–¥–æ–≤ –≤–Ω—É—Ç—Ä–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–µ–π—Å–æ–≤
        (items.forEach ? items.forEach : Array.prototype.forEach).call(items, function(el){
          if (!el.classList || el.classList.contains('active')) return;
          var nonActiveSlides = qsa(el, '.story-track-wrapper__slide.active');
          (nonActiveSlides.forEach ? nonActiveSlides.forEach : Array.prototype.forEach).call(nonActiveSlides, function(s){
            try { s.classList.remove('active'); } catch(_){ }
          });
        });

        // –°—Ç–∞–≤–∏–º –Ω–∞ –ø–∞—É–∑—É –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –≤–∏–¥–µ–æ –≤–Ω—É—Ç—Ä–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–µ–π—Å–æ–≤
        (items.forEach ? items.forEach : Array.prototype.forEach).call(items, function(el){
          if (!el.classList || el.classList.contains('active')) return;
          pauseAndResetVideosInElement(el);
        });

        // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º active –¥–ª—è —Å–ª–∞–π–¥–∞ –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ wrapper –ø–æ —Ü–µ–Ω—Ç—Ä—É
        var wrappersInCase = qsa(best, '.story-track-wrapper');
        each(wrappersInCase, function(w){
          var activeSlide = null;
          try { activeSlide = setActiveSlideInWrapperByCenter(w); } catch(_){ }
          try { updateWrapperPlayback(w); } catch(_){ }
          if (activeSlide) { try { playVideos(activeSlide, 'setupCasesActiveOnScrollSnap.setActiveByCenter'); } catch(_){ } }
        });

        // –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ —Ç–æ–ª—å–∫–æ –≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ª–∞–π–¥–∞—Ö –≤–Ω—É—Ç—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–µ–π—Å–∞
        var activeSlidesInCase = qsa(best, '.story-track-wrapper__slide.active');
        each(activeSlidesInCase, function(s){ try { playVideos(s, 'setupCasesActiveOnScrollSnap.activeSlides'); } catch(_){ } });

        lastActiveCase = best;
      }
    }

    function onScroll(){
      if (rafId) return;
      rafId = requestAnimationFrame(updateActive);
      if (settleTimer) { clearTimeout(settleTimer); }
      settleTimer = setTimeout(updateActive, 140); // –¥–∞—ë–º snap ¬´–¥–æ—Å–µ—Å—Ç—å¬ª
    }

    scroller.addEventListener('scroll', onScroll, { passive:true });
    window.addEventListener('resize', onScroll, { passive:true });
    window.addEventListener('orientationchange', onScroll, { passive:true });
    updateActive();
  }

  // –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–ª–∞–π–¥–∞ –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ wrapper-–∞
  function setupActiveObserver(wrapperEl){
    if (!wrapperEl) return;
    var slides = qsa(wrapperEl, '.story-track-wrapper__slide');
    if (!slides || !slides.length) return;

    var ratios = new Map();
    var ACTIVE_THRESHOLD = 0.6; // –°–ª–∞–π–¥ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ >= 60%

    var io = new IntersectionObserver(function(entries){
      each(entries, function(entry){
        ratios.set(entry.target, entry.intersectionRatio || 0);
      });

      // –í—ã–±–∏—Ä–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–∏–¥–∏–º—ã–π —Å–ª–∞–π–¥
      var bestSlide = null; var bestRatio = 0;
      each(slides, function(slide){
        var r = ratios.get(slide) || 0;
        if (r > bestRatio){ bestRatio = r; bestSlide = slide; }
      });

      if (bestSlide && bestRatio >= ACTIVE_THRESHOLD){
        // –ú–µ–Ω—è–µ–º active —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–µ–π—Å –∞–∫—Ç–∏–≤–µ–Ω
        var caseEl = wrapperEl.closest ? wrapperEl.closest('.cases-grid__item, .case') : null;
        var caseIsActive = !!(caseEl && caseEl.classList && caseEl.classList.contains('active'));
        if (caseIsActive){
          each(slides, function(slide){
            if (slide === bestSlide){ try { slide.classList.add('active'); } catch(_){ } }
            else { try { slide.classList.remove('active'); } catch(_){ } }
          });
          updateWrapperPlayback(wrapperEl);
          // –ü–æ—Å–ª–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è active ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–ª–∞–π–¥–µ
          try { playVideos(bestSlide, 'setupActiveObserver.bestSlide'); } catch(_){ }
        }
      }
    }, { root: wrapperEl, threshold: [0, 0.25, 0.5, 0.6, 0.75, 1] });

    each(slides, function(slide){ io.observe(slide); });

    // –ù–∞—á–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    setTimeout(function(){ updateWrapperPlayback(wrapperEl); }, 0);
  }

  // –ù–∞—á–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: –æ—Å—Ç–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º —Ç–µ–∫—É—â–∏–π –∫–µ–π—Å, –æ—Å—Ç–∞–ª—å–Ω—ã–µ ‚Äî –ø–∞—É–∑–∞+—Å–±—Ä–æ—Å; –≤ –∞–∫—Ç–∏–≤–Ω–æ–º ‚Äî –≤—ã–±—Ä–∞—Ç—å —Å–ª–∞–π–¥—ã –ø–æ —Ü–µ–Ω—Ç—Ä—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å
  function initializeActiveCasePlaybackOnce(){
    try {
      var scroller = qs(document, '.main-section');
      var cases = scroller ? qsa(scroller, '.cases-grid__item, .case') : qsa(document, '.cases-grid__item, .case');
      if (!cases || !cases.length) return;
      var activeCase = qs(document, '.cases-grid__item.active, .case.active');
      if (!activeCase) return;

      // –°–Ω–∏–º–∞–µ–º active —Å –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–µ–π—Å–æ–≤, —Å—Ç–∞–≤–∏–º –ø–∞—É–∑—É+0 –¥–ª—è –≤–∏–¥–µ–æ; talking-head —Ç–æ–ª—å–∫–æ –ø–∞—É–∑–∞
      (cases.forEach ? cases.forEach : Array.prototype.forEach).call(cases, function(el){
        if (el === activeCase){
          try { el.classList.add('active'); } catch(_){ }
          try { playTalkingHead(el); } catch(_){ }
          try { ensureTalkingHeadAutoPlay(el); } catch(_){ }
        } else {
          try { el.classList.remove('active'); } catch(_){ }
          try { pauseTalkingHead(el); } catch(_){ }
          try { pauseAndResetVideosInElement(el); } catch(_){ }
        }
      });

      // –î–ª—è –∫–∞–∂–¥–æ–≥–æ wrapper –≤–Ω—É—Ç—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–µ–π—Å–∞ ‚Äî –≤—ã–±—Ä–∞—Ç—å —Å–ª–∞–π–¥ –ø–æ —Ü–µ–Ω—Ç—Ä—É, –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å, –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π
      var wrappers = qsa(activeCase, '.story-track-wrapper');
      each(wrappers, function(w){
        var slide = null;
        try { slide = setActiveSlideInWrapperByCenter(w); } catch(_){ }
        try { updateWrapperPlayback(w); } catch(_){ }
        if (slide){ try { playVideos(slide, 'initializeActiveCasePlaybackOnce.setActiveByCenter'); } catch(_){ } }
      });

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–ª–∞–π–¥—ã –≤ –∞–∫—Ç–∏–≤–Ω–æ–º –∫–µ–π—Å–µ
      var activeSlides = qsa(activeCase, '.story-track-wrapper__slide.active');
      each(activeSlides, function(s){ try { playVideos(s, 'initializeActiveCasePlaybackOnce.activeSlides'); } catch(_){ } });
    } catch(_){ }
  }

  // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–¥–Ω–æ–≥–æ –≤–∏–¥–µ–æ (–¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º—ã—Ö)
  function unlockSingleVideo(video){
    if (!video || video.__unlockedByGesture || typeof video.play !== 'function') return false;
    
    try {
      var wasPaused = video.paused;
      var originalMuted = video.muted;
      var currentTime = video.currentTime || 0;
      
      if (!video.muted) {
        video.muted = true;
      }
      
      var playPromise = video.play();
      if (playPromise && typeof playPromise.then === 'function') {
        playPromise.then(function(){
          try {
            video.pause();
            video.currentTime = currentTime;
            if (!originalMuted) {
              video.muted = originalMuted;
            }
            video.__unlockedByGesture = true;
            return true;
          } catch(_){ return false; }
        }).catch(function(){ return false; });
      } else {
        if (!video.paused) {
          video.pause();
          video.currentTime = currentTime;
        }
        video.__unlockedByGesture = true;
        return true;
      }
    } catch(_){ return false; }
    return false;
  }

  // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ—à–∏–±–æ–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–µ–æ
  function setupVideoErrorHandlers(){
    try {
            var allVideos = qsa(document, 'video');
            each(allVideos, function(video){
              // –ï—Å–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –ø—ã—Ç–∞–µ–º—Å—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ –≤–∏–¥–µ–æ —Ç–æ–∂–µ
              if (userGestureState.videosUnlocked && !video.__unlockedByGesture) {
                unlockSingleVideo(video);
              }
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏/–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
        if (!video.__errorHandlerAttached) {
          video.addEventListener('error', function(ev){
            var err = video.error;
            console.error('[snapSlider] –û—à–∏–±–∫–∞ –≤–∏–¥–µ–æ —ç–ª–µ–º–µ–Ω—Ç–∞:', {
              src: video.src || video.currentSrc || 'no src',
              error: err ? {
                code: err.code,
                message: err.message || 'Unknown video error'
              } : 'Unknown error',
              readyState: video.readyState,
              networkState: video.networkState,
              time: new Date().toISOString()
            });
          }, { passive: true });
          
          // –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–≥–¥–∞ –≤–∏–¥–µ–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª–∏—Ç–∏–∫–æ–π –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
          video.addEventListener('play', function(){
            var gestureInfo = getUserGestureInfo();
            console.log('[snapSlider] –í–∏–¥–µ–æ –Ω–∞—á–∞–ª–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ (—Å–æ–±—ã—Ç–∏–µ play):', {
              src: video.src || video.currentSrc || 'no src',
              muted: video.muted,
              paused: video.paused,
              '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∂–µ—Å—Ç—ã': {
                '–ï—Å—Ç—å –∂–µ—Å—Ç—ã': gestureInfo.hasGesture,
                '–í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∂–µ—Å—Ç–∞': gestureInfo.timeSinceGesture ? (gestureInfo.timeSinceGesture / 1000).toFixed(2) + ' —Å–µ–∫' : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
                '–û–∫–Ω–æ –∂–µ—Å—Ç–∞ –≤–∞–ª–∏–¥–Ω–æ': gestureInfo.isGestureValid
              }
            });
          }, { passive: true });
          
          video.__errorHandlerAttached = true;
        }
      });
    } catch(_){}
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ–≥–æ snap-—Å–ª–∞–π–¥–µ—Ä–∞
  function initSnapSlider(){
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ –¥–ª—è –≤–∏–¥–µ–æ
    setupVideoErrorHandlers();

    var wrappers = qsa(document, '.story-track-wrapper');
    if (!wrappers || !wrappers.length) return;
    each(wrappers, function(wrapper){
      var slides = qsa(wrapper, '.story-track-wrapper__slide');
      if (!slides || !slides.length) return;

      // –°—Ç—Ä–æ–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å, –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω
      if (!qs(wrapper, '.story-progress')){
        try { buildProgress(wrapper, slides.length); } catch(_){ }
      }

      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–µ–≥–º–µ–Ω—Ç–æ–≤ —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏ –≤–∏–¥–µ–æ
      syncProgressDurations(wrapper);

      // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∞–∫—Ç–∏–≤–Ω—ã–º —Å–ª–∞–π–¥–æ–º
      setupActiveObserver(wrapper);

      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–∫–Ω–∞
      try {
        window.addEventListener('resize', function(){ updateWrapperPlayback(wrapper); }, { passive: true });
        window.addEventListener('orientationchange', function(){ updateWrapperPlayback(wrapper); }, { passive: true });
      } catch(_){ }

      // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–≤–∞–π–ø—ã/–ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤–Ω—É—Ç—Ä–∏ wrapper, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–±–∏–≤–∞—Ç—å –∏—Ö –∞–≤—Ç–æ–ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏
      try {
        var st = wrapper.__snapState || (wrapper.__snapState = {});
        var onDown = function(){ st.isUserInteracting = true; if (st._uiTimer) clearTimeout(st._uiTimer); };
        var onUp = function(){ if (st._uiTimer) clearTimeout(st._uiTimer); st._uiTimer = setTimeout(function(){ st.isUserInteracting = false; }, 300); };
        var onScrollEvt = function(){
          st.isUserInteracting = true;
          if (st._uiTimer) clearTimeout(st._uiTimer);
          st._uiTimer = setTimeout(function(){ st.isUserInteracting = false; }, 150);
        };
        wrapper.addEventListener('pointerdown', onDown, { passive: true });
        wrapper.addEventListener('pointerup', onUp, { passive: true });
        wrapper.addEventListener('pointercancel', onUp, { passive: true });
        wrapper.addEventListener('touchstart', onDown, { passive: true });
        wrapper.addEventListener('touchend', onUp, { passive: true });
        wrapper.addEventListener('wheel', onScrollEvt, { passive: true });
        wrapper.addEventListener('scroll', onScrollEvt, { passive: true });
      } catch(_){ }
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Z-Index –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç–µ–∫–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    try { initializeStackZIndex(); } catch(_){ }

    // –ì–ª–æ–±–∞–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ active —É .cases-grid__item –ø–æ —Ü–µ–Ω—Ç—Ä—É snap-—Å–∫—Ä–æ–ª–ª–µ—Ä–∞
    setupCasesActiveOnScrollSnap();

    // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–∫–æ–≤ –ø–æ –∑–æ–Ω–∞–º –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å–ª–∞–π–¥–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–µ–π—Å–∞
    try {
      document.addEventListener('click', function(ev){
        var target = ev.target;
        if (!target) return;
        // –¢–∞–ø –ø–æ –∞–π—Ç–µ–º—É —Å–ø–∏—Å–∫–∞ —Å—Ç–µ–∫–∞ –∏–ª–∏ collection-item ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç–µ–∫; –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–æ–º: current -> –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ; –Ω–µ current -> –∑–∞–∫—Ä—ã—Ç–∏–µ –∏ —Å–∫—Ä–æ–ª–ª –∫ –∫–µ–π—Å—É
        var stackItem = target.closest ? target.closest('.main-container__stack-wrap__wrapper__list__item') : null;
        var collectionItem = target.closest ? target.closest('.collection-item') : null;
        if (stackItem || collectionItem){
          var container = getStackContainer();
          if (container){
            var isOpen = container.classList.contains('open-stack');
            if (!isOpen){
              const header = document.getElementById('header');
              header.style.zIndex = '9';
              container.classList.add('open-stack');
              // –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏: –¥–æ–±–∞–≤–ª—è–µ–º xx-card-style –Ω–∞ —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
              try {
                var activeCaseEl = qs(document, '.cases-grid__item.active, .case.active');
                var brandKeyOpen = extractBrandKeyFromCase(activeCaseEl);
                var listOpen = getStackList();
                if (brandKeyOpen && listOpen){
                  var currentElOpen = qs(listOpen, '.main-container__stack-wrap__wrapper__list__item.current');
                  if (!currentElOpen){ setStackMiniViewCurrent(brandKeyOpen); currentElOpen = qs(listOpen, '.main-container__stack-wrap__wrapper__list__item.current'); }
                  if (currentElOpen){ clearStackCardStyles(); currentElOpen.classList.add(brandKeyOpen + '-card-style'); }
                }
              } catch(_){ }
              try { updateStackOpacityByCurrent(); } catch(_){ }
              // –°–∫—Ä—ã–≤–∞–µ–º collection-wrapper –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç–µ–∫–∞
              try {
                var collectionWrappers = qsa(document, '.collection-wrapper');
                each(collectionWrappers, function(el){ try { el.style.opacity = '0'; } catch(_){ } });
              } catch(_){ }
              return;
            }
            // –°—Ç–µ–∫ –æ—Ç–∫—Ä—ã—Ç: –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–æ–≥–æ, –∫–ª–∏–∫–Ω—É–ª–∏ –ø–æ current –∏–ª–∏ –Ω–µ—Ç
            var isCurrent = stackItem.classList && stackItem.classList.contains('current');
            if (isCurrent){
              // –ü–µ—Ä–µ—Ö–æ–¥ –ø–æ –±–ª–∏–∂–∞–π—à–µ–π —Å—Å—ã–ª–∫–µ –≤–Ω—É—Ç—Ä–∏ –∞–π—Ç–µ–º–∞
              try {
                var link = stackItem.querySelector ? stackItem.querySelector('a[href]') : null;
                if (link && link.href){ link.click ? link.click() : (window.location.href = link.href); }
              } catch(_){ }
              return;
            }
            // –ö–ª–∏–∫ –ø–æ –Ω–µ current: –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç–µ–∫, —á–∏—Å—Ç–∏–º card-style, –¥–µ–ª–∞–µ–º –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∫ –∫–µ–π—Å—É –∏ —Å—Ä–∞–∑—É –≤—ã—Å—Ç–∞–≤–ª—è–µ–º current/active
            try {
              const header = document.getElementById('header');
              header.style.zIndex = '14';
              container.classList.remove('open-stack');
              clearStackCardStyles();
              updateStackOpacityByCurrent();
              var brandKeyItem = extractBrandKeyFromStackItem(stackItem);
              // –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π —Å–∫—Ä–æ–ª–ª –≤–Ω—É—Ç—Ä–∏ .main-section
              scrollToCaseByBrand(brandKeyItem, { instant: true });
              // —Å—Ä–∞–∑—É –≤—ã—Å—Ç–∞–≤–ª—è–µ–º .active –∫–µ–π—Å—É –∏ .current –∞–π—Ç–µ–º—É
              if (brandKeyItem){
                try {
                  var caseElTarget = document.getElementById(brandKeyItem + '-case') || qs(document, '#' + brandKeyItem + '-case');
                  if (caseElTarget){
                    var scroller2 = qs(document, '.main-section');
                    var cases = scroller2 ? qsa(scroller2, '.cases-grid__item, .case') : qsa(document, '.cases-grid__item, .case');
                    each(cases, function(el){ if (el === caseElTarget) { try { el.classList.add('active'); playTalkingHead(el); } catch(__){} } else { try { el.classList.remove('active'); pauseTalkingHead(el); } catch(__){} } });
                  }
                  // current –≤ —Å–ø–∏—Å–∫–µ
                  var listAll = getStackList();
                  if (listAll){
                    var targetItem = qs(listAll, '[brand-data="' + brandKeyItem + '-mini-view"]') || (listAll.querySelector ? listAll.querySelector('[brand-data$="-mini-view"][brand-data^="' + brandKeyItem + '"]') : null);
                    if (targetItem){
                      var currents = qsa(listAll, '.current');
                      each(currents, function(el){ try { el.classList.remove('current'); } catch(__){} });
                      try { targetItem.classList.add('current'); } catch(__){}
                    }
                  }
                  // –ø–µ—Ä–µ—Å—á—ë—Ç opacity –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã current
                  updateStackOpacityByCurrent();
                } catch(__){}
              }
            } catch(_){ }
            return;
          }
          return;
        }

        var closeStack = target.closest ? target.closest('#mob-stack-close') : null;
        if (closeStack){
          var container2 = getStackContainer();
          if (container2 && container2.classList.contains('open-stack')){
            const header = document.getElementById('header');
            header.style.zIndex = '14';
            container2.classList.remove('open-stack');
          }
          // –ü—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ ‚Äî –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º opacity –ø—Ä–∞–≤–∏–ª–æ ¬´–≤—Å–µ –¥–æ current = 0¬ª –∏ —Å–Ω–∏–º–∞–µ–º card-style
          try {
            updateStackOpacityByCurrent();
            clearStackCardStyles();
          } catch(_){ }
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º collection-wrapper –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç–µ–∫–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π 300ms
          try {
            setTimeout(function(){
              try {
                var collectionWrappers = qsa(document, '.collection-wrapper');
                each(collectionWrappers, function(el){ try { el.style.opacity = '1'; } catch(_){ } });
              } catch(_){ }
            }, 300);
          } catch(_){ }
          return;
        }
        var isLeft = target.closest ? target.closest('.story-tap-left') : null;
        var isRight = target.closest ? target.closest('.story-tap-right') : null;
        if (!isLeft && !isRight) return;
        ev.preventDefault();
        var caseEl = target.closest ? target.closest('.cases-grid__item, .case') : null;
        if (!caseEl || !caseEl.classList || !caseEl.classList.contains('active')) return; // —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º –∫–µ–π—Å–µ
        var wrapper = qs(caseEl, '.story-track-wrapper');
        if (!wrapper) return;
        var slides = qsa(wrapper, '.story-track-wrapper__slide');
        if (!slides || !slides.length) return;
        // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —Å–ª–∞–π–¥
        var curIdx = getActiveSlideIndex(wrapper);
        if (curIdx === -1){
          var ensured = setActiveSlideInWrapperByCenter(wrapper);
          curIdx = ensured ? Array.prototype.indexOf.call(slides, ensured) : 0;
          if (curIdx < 0) curIdx = 0;
        }
        var nextIdx = curIdx;
        if (isRight) { nextIdx = (curIdx + 1) < slides.length ? (curIdx + 1) : 0; }
        else if (isLeft) { nextIdx = (curIdx - 1) >= 0 ? (curIdx - 1) : (slides.length - 1); }

        // –°—Ç–∞–≤–∏–º active –Ω–∞ —Ü–µ–ª–µ–≤–æ–π, —Å–Ω–∏–º–∞–µ–º —Å –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
        (slides.forEach ? slides.forEach : Array.prototype.forEach).call(slides, function(s, i){
          if (i === nextIdx) { try { s.classList.add('active'); } catch(_){ } }
          else { try { s.classList.remove('active'); } catch(_){ } }
        });

        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ü–µ–ª–µ–≤–æ–º—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å/–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        try { scrollToSlide(wrapper, slides, nextIdx, { forceIgnoreUser: true }); } catch(_){ }
        try { updateWrapperPlayback(wrapper); } catch(_){ }
        try { playVideos(slides[nextIdx], 'clickHandler.tapZone'); } catch(_){ }
        // –î–∞–µ–º snap ¬´–¥–æ—Å–µ—Å—Ç—å¬ª –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º active –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É
        try {
          setTimeout(function(){
            try {
              var actual = setActiveSlideInWrapperByCenter(wrapper);
              updateWrapperPlayback(wrapper);
              if (actual) { playVideos(actual, 'clickHandler.afterSettle'); }
            } catch(__){}
          }, 160);
        } catch(__){}
      });
    } catch(_){ }
  }

  if (typeof document !== 'undefined'){
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∂–µ—Å—Ç–æ–≤ –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–∞–Ω—å—à–µ
    initUserGestureTracking();
    
    if (document.readyState === 'loading'){
      document.addEventListener('DOMContentLoaded', function(){
        initSnapSlider();
        // –ù–∞—á–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–µ–π—Å–∞
        initializeActiveCasePlaybackOnce();
      }, { once: true });
    } else {
      initSnapSlider();
      // –ù–∞—á–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–µ–π—Å–∞
      initializeActiveCasePlaybackOnce();
    }
  }
})();
